자료형에는 크게 3가지로 분류된다. 
1. 정수형
2. 부동소수점형
3. 문자형

1. 정수형
ㄴ 부호 o 
- short : byte(2) : 약 32000~-32000
- int : byte(4) : 약 21억~-21억
- long : byte(4): 약 21억~-21억

ㄴ 부호 x
- unsigned short : byte(2) : 약 0~ 65000
- unsigned int : byte(4) : 약 0~43억
- unsigned long : byte(4): 약 0~43억 - 상수로 쓰임 숫자 뒤에 L을 붙임


2. 부동소수점 형
- float :byte(4) :약 1.2E-38 ~ 3.4E+38
- double : byte(8) 약 2.2E -308 ~ 1.8E+308

3. 문자형
ㄴ 부호 o 
- char: byte(1): -128 ~ 128
- unsigned char: byte(1) : 255

우리 사람이 사용하는 숫자는 10진수이다. 하지만 컴퓨터가 사용하는 숫자는 0과 1로 이루어진 2진수이다.

자료형의 범위를 넘어가면 오버플로우 또는 언더플로우가 될 수 있다. 

상수를 쓸 때 
1. 자료형 앞에 const를 쓴다. 
2. #define으로 메크로를 준다음 정의를 해준다. 

부동소수점 
왜? 소수를 컴퓨터에서는 부동소수라 부르는가? - 지정된 메모리가 있고 오차가 있기 때문이다. - 움직일 수 있기 때문